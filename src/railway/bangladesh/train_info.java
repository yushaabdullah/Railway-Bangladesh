/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package railway.bangladesh;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import static railway.bangladesh.user_home_page.send_train_number;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import java.sql.*;

/**
 *
 * @author Yusha
 */
public class train_info extends javax.swing.JFrame {

    /**
     * Creates new form train_info
     */
    public train_info() {
        initComponents();
        this.setLocationRelativeTo(null); //center form in the screen

        String url = "jdbc:sqlserver://LAPTOP-3GFO49NI\\SQLEXPRESS:1433;databaseName=RailwayBangladesh";
        String sql_user = "sqlyusha";
        String sql_password = "123456789";

        try {

            int train_no = user_home_page.send_train_number;
            String train_number = String.valueOf(train_no);
            String departure_date = user_home_page.send_date;
            Connection connection = DriverManager.getConnection(url, sql_user, sql_password);
            String sql = "SELECT * FROM Train WHERE TrainNumber = '" + train_number + "' AND DepartureDate = '" + departure_date + "'";
            Statement statement = connection.createStatement();
            ResultSet rs = statement.executeQuery(sql);

            if (rs.next()) {
                train_number_label_trainpage.setText(String.valueOf(rs.getInt("TrainNumber")));
                train_page_label.setText(rs.getString("TrainName"));
                departure_date_input_label.setText(rs.getString("DepartureDate"));
                departure_time_input_trainpage.setText(rs.getString("DepartureTime"));
                arrival_time_input_trainpage.setText(rs.getString("ArrivalTime"));
            }

            String sql2 = "SELECT COUNT(*) AS COUNT FROM Seats WHERE TrainNumber='" + train_number + "' AND DepartureDate='" + departure_date + "'";
            String sql3 = "SELECT COUNT(*) AS COUNT FROM Seats WHERE TrainNumber='" + train_number + "' AND DepartureDate='" + departure_date + "' AND SeatStatus='Available'";

            ResultSet rs2 = statement.executeQuery(sql2);

            if (rs2.next()) {
                total_seat_label_trainpage.setText(String.valueOf(rs2.getInt("COUNT")));
            }

            ResultSet rs3 = statement.executeQuery(sql3);

            if (rs3.next()) {
                available_seat_label_trainpage.setText(String.valueOf(rs3.getInt("COUNT")));
            }

        } catch (SQLException e) {
            System.out.println("database connection failed");
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        train_number_trainpage = new javax.swing.JLabel();
        total_seat_trainpage = new javax.swing.JLabel();
        next_button_trainpage = new javax.swing.JButton();
        available_seat_trainpage = new javax.swing.JLabel();
        back_button_trainpage = new javax.swing.JButton();
        departure_date_label = new javax.swing.JLabel();
        departure_time_trainpage = new javax.swing.JLabel();
        arrival_time_trainpage = new javax.swing.JLabel();
        train_number_label_trainpage = new javax.swing.JLabel();
        total_seat_label_trainpage = new javax.swing.JLabel();
        available_seat_label_trainpage = new javax.swing.JLabel();
        departure_time_input_trainpage = new javax.swing.JLabel();
        train_page_label = new javax.swing.JLabel();
        arrival_time_input_trainpage = new javax.swing.JLabel();
        departure_date_input_label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        train_number_trainpage.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        train_number_trainpage.setText("Train Number");

        total_seat_trainpage.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        total_seat_trainpage.setText("Total Seats");

        next_button_trainpage.setBackground(new java.awt.Color(0, 0, 0));
        next_button_trainpage.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        next_button_trainpage.setForeground(new java.awt.Color(255, 255, 255));
        next_button_trainpage.setText("Next");
        next_button_trainpage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                next_button_trainpageActionPerformed(evt);
            }
        });

        available_seat_trainpage.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        available_seat_trainpage.setText("Available Seats");

        back_button_trainpage.setBackground(new java.awt.Color(0, 0, 0));
        back_button_trainpage.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        back_button_trainpage.setForeground(new java.awt.Color(255, 255, 255));
        back_button_trainpage.setText("Back");
        back_button_trainpage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_button_trainpageActionPerformed(evt);
            }
        });

        departure_date_label.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        departure_date_label.setText("Departure Date");

        departure_time_trainpage.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        departure_time_trainpage.setText("Departure Time");

        arrival_time_trainpage.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        arrival_time_trainpage.setText("Arrival Time");

        train_number_label_trainpage.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        train_number_label_trainpage.setText("jLabel7");

        total_seat_label_trainpage.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        total_seat_label_trainpage.setText("jLabel7");

        available_seat_label_trainpage.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        available_seat_label_trainpage.setText("jLabel7");

        departure_time_input_trainpage.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        departure_time_input_trainpage.setText("jLabel7");

        train_page_label.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        train_page_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        train_page_label.setText("TRAIN INFO");

        arrival_time_input_trainpage.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        arrival_time_input_trainpage.setText("jLabel7");

        departure_date_input_label.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        departure_date_input_label.setText("jLabel1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(train_page_label, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(204, 204, 204))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(back_button_trainpage, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(next_button_trainpage, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(arrival_time_trainpage, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(arrival_time_input_trainpage, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(total_seat_trainpage, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(total_seat_label_trainpage, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(train_number_trainpage, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(train_number_label_trainpage, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(departure_date_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(departure_time_trainpage, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE))
                                    .addComponent(available_seat_trainpage, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(available_seat_label_trainpage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(departure_time_input_trainpage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(departure_date_input_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap(96, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(train_page_label, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(train_number_label_trainpage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(train_number_trainpage, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(total_seat_trainpage, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(total_seat_label_trainpage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(available_seat_trainpage, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(available_seat_label_trainpage, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(departure_date_label, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(departure_date_input_label, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(departure_time_trainpage, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(departure_time_input_trainpage, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(arrival_time_trainpage, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arrival_time_input_trainpage, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(next_button_trainpage, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(back_button_trainpage, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void back_button_trainpageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_button_trainpageActionPerformed
        this.setVisible(false);
        user_home_page obs = new user_home_page();
        obs.setVisible(true);
    }//GEN-LAST:event_back_button_trainpageActionPerformed

    private void next_button_trainpageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_next_button_trainpageActionPerformed

        String url = "jdbc:sqlserver://LAPTOP-3GFO49NI\\SQLEXPRESS:1433;databaseName=RailwayBangladesh";
        String sql_user = "sqlyusha";
        String sql_password = "123456789";

        int count = 0, count1 = 0;

        try {

            int train_no = user_home_page.send_train_number;
            String train_number = String.valueOf(train_no);
            String departure_date = user_home_page.send_date;
            Connection connection = DriverManager.getConnection(url, sql_user, sql_password);
            Statement statement = connection.createStatement();

            int customer_id = log_in.send_CustomerId;
            String sql5 = "Select COUNT(*) AS CustomerCount from Tickets WHERE CustomerId='" + customer_id + "' AND TrainNumber = '" + train_number + "' AND DepartureDate = '" + departure_date + "'";
            ResultSet rs5 = statement.executeQuery(sql5);

            if (rs5.next()) {
                count1 = rs5.getInt("CustomerCount");
            }

            if (count1 > 5) {
                JOptionPane.showMessageDialog(this, "Sorry! Ticket Purchase Limit Exceeded!");
                this.setVisible(false);
                user_home_page ob3= new user_home_page();
                ob3.setVisible(true);
            } else {
                String sql4 = "SELECT COUNT(*) AS COUNT FROM Seats WHERE TrainNumber='" + train_number + "' AND DepartureDate='" + departure_date + "' AND SeatStatus='Available'";

                ResultSet rs4 = statement.executeQuery(sql4);

                if (rs4.next()) {
                    count = rs4.getInt("COUNT");
                }

                if (count == 0) {
                    JOptionPane.showMessageDialog(this, "Sorry! No Seats Are Available!");
                } else {
                    JOptionPane.showMessageDialog(this, "Please Check Available Seats! You Can Only Buy 5 Tickets Maximum!");
                    this.setVisible(false);
                    ticket_info obs1 = new ticket_info();
                    obs1.setVisible(true);
                }
            }

        } catch (SQLException e) {
            System.out.println("database connection failed");
            e.printStackTrace();
        }


    }//GEN-LAST:event_next_button_trainpageActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(train_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(train_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(train_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(train_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new train_info().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel arrival_time_input_trainpage;
    private javax.swing.JLabel arrival_time_trainpage;
    private javax.swing.JLabel available_seat_label_trainpage;
    private javax.swing.JLabel available_seat_trainpage;
    private javax.swing.JButton back_button_trainpage;
    private javax.swing.JLabel departure_date_input_label;
    private javax.swing.JLabel departure_date_label;
    private javax.swing.JLabel departure_time_input_trainpage;
    private javax.swing.JLabel departure_time_trainpage;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton next_button_trainpage;
    private javax.swing.JLabel total_seat_label_trainpage;
    private javax.swing.JLabel total_seat_trainpage;
    private javax.swing.JLabel train_number_label_trainpage;
    private javax.swing.JLabel train_number_trainpage;
    private javax.swing.JLabel train_page_label;
    // End of variables declaration//GEN-END:variables
}
